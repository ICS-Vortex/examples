<?php

namespace App\Repository;

use App\Entity\Tour;
use DateTime;
use Doctrine\ORM\EntityRepository;
use Exception;

/**
 * TourRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TourRepository extends EntityRepository
{
    /**
     * @return Tour|object
     * @throws Exception
     */
    public function findCurrentTour()
    {
        $start = new DateTime(date('Y-m-01 00:00:00'));
        $end = new DateTime(date('Y-m-t 23:59:59'));

        $em = $this->getEntityManager();
        $tour = $em->getRepository(Tour::class)->findOneBy(array(
            'start' => $start,
            'end' => $end,
        ));

        return $tour;
    }

    /**
     * @return Tour|null
     */
    public function getCurrentTour(): ?Tour
    {
        $tour = null;
        $search = $this->createQueryBuilder('tour')
            ->where('tour.finished = :not_finished')
            ->setParameter('not_finished', false)
            ->orderBy('tour.id', 'DESC')
            ->setMaxResults(1)
            ->getQuery()
            ->getResult();
        if (!empty($search)) {
            $tour = reset($search);
        }

        return $tour;
    }


    /**
     * @param null $id
     * @return Tour|null
     */
    private function getTourById($id = null): ?Tour
    {
        $em = $this->getEntityManager();
        /**@var $tour Tour */
        if (empty($id)) {
            $tour = $em->getRepository(Tour::class)->getCurrentTour();
        } else {
            $tour = $em->getRepository(Tour::class)->findOneBy(array(
                'id' => $id,
            ));
            if (empty($tour)) {
                $tour = $em->getRepository(Tour::class)->getCurrentTour();
            }
        }

        return $tour;
    }

}
